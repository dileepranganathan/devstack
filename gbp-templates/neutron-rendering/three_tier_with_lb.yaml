#!highlight yaml

heat_template_version: 2013-05-23

parameters:

  monitoring_vm_image:
    type: string
    label: monitoring_vm_image
    description: Name of the image for the monitoring VMs
    default: 'cirros'

  web_vm_image:
    type: string
    label: web_vm_image
    description: Name of the image for the Web VMs
    default: 'cirros'

  app_vm_image:
    type: string
    label: app_vm_image
    description: Name of the image for the App VMs
    default: 'cirros'

  db_vm_image:
    type: string
    label: db_vm_image
    description: Name of the image for the DB VMs
    default: 'cirros'

  external_ptg_name:
    type: string
    label: external_ptg_name
    description: Name of the External Policy
    default: 'Outside'

  app_ip_pool:
    type: string
    label: app_ip_pool
    description: IP Pool used for the 3 tier app
    default: '192.168.0.0/16'

  mgmt_ip_pool:
    type: string
    label: mgmt_ip_pool
    description: IP Pool used for the Services' Mgmt network
    default: '172.1.0.0/24'

resources:

#### Network Setup ####

# Create L3 Policies for the 3-tier App & Services' Mgmt Network (VRFs)
    l3_policy:
        type: OS::Neutron::L3Policy
        properties:
            name: IP_Policy
            ip_pool: { get_param: app_ip_pool }
            shared: False

    mgmt_l3_policy:
        type: OS::Neutron::L3Policy
        properties:
            name: 'Service Mgmt L3 Policy'
            ip_pool: { get_param: mgmt_ip_pool }
            shared: False

# Create L2 Policies (Bridge Domains)
    monitoring_tier_l2_policy:
        type: OS::Neutron::L2Policy
        depends_on: l3_policy
        properties:
            name: Monitoring_Domain
            l3_policy_id: { get_resource: l3_policy }
            shared: False

    app_db_tier_l2_policy:
        type: OS::Neutron::L2Policy
        depends_on: l3_policy
        properties:
            name: App_DB_Domain
            l3_policy_id: { get_resource: l3_policy }
            shared: False

    web_tier_l2_policy:
        type: OS::Neutron::L2Policy
        depends_on: l3_policy
        properties:
            name: Web_Domain
            l3_policy_id: { get_resource: l3_policy }
            shared: False

    mgmt_l2_policy:
        type: OS::Neutron::L2Policy
        depends_on: mgmt_l3_policy
        properties:
            name: 'Service Mgmt Domain'
            l3_policy_id: { get_resource: mgmt_l3_policy }
            shared: False

#### Network Services' Setup ####

# Create loadbalancer service chain node
    sc_lb_node:
        type: OS::Neutron::ServiceChainNode
        properties:
            name: Loadbalancer_Node
            service_type: LOADBALANCER
            config: { get_file: lb_vip_description.template }

# Tie the service(s) into a chain
    sc_spec:
        type: OS::Neutron::ServiceChainSpec
        depends_on: [ sc_lb_node ]
        properties:
            name: LB_Chain_Spec
            nodes:
                - { get_resource: sc_lb_node }

# Create a network service policy for VIP IP assignment
    vip_ip_policy:
        type: OS::Neutron::NetworkServicePolicy
        properties:
            name: VIP_Policy
            network_service_params: 
                - type: ip_single
                  name: vip_ip
                  value: self_subnet
            shared: True

#### Policy Classifiers, Actions, Rules Setup ####

# Create allow action
    allow_action:
        type: OS::Neutron::PolicyAction
        properties:
            name: Allow_Action
            action_type: allow
            shared: False

# Create a classifier for monitoring traffic
    monitoring_classifier:
        type: OS::Neutron::PolicyClassifier
        properties:
            name: Monitoring_Classifier
            protocol: tcp
            port_range: '8080'
            direction: in
            shared: True

    monitoring_traffic_rule:
        type: OS::Neutron::PolicyRule
        depends_on: [ monitoring_classifier, allow_action ]
        properties:
            name: Allow_Monitoring
            policy_classifier_id: { get_resource: monitoring_classifier }
            policy_actions: [{ get_resource: allow_action }]
            shared: False

# Create a classifier for DB traffic
    db_tcp_classifier:
        type: OS::Neutron::PolicyClassifier
        properties:
            name: MySQL_DB_TCP_Classifier
            protocol: tcp
            port_range: '3306'
            direction: in
            shared: True

    mysql_db_traffic_rule:
        type: OS::Neutron::PolicyRule
        depends_on: [ db_tcp_classifier, allow_action ]
        properties:
            name: Allow_MySQL
            policy_classifier_id: { get_resource: db_tcp_classifier }
            policy_actions: [{ get_resource: allow_action }]
            shared: False

# Create a classifier for App traffic
    app_tcp_classifier:
        type: OS::Neutron::PolicyClassifier
        properties:
            name: App_TCP_Classifier
            protocol: tcp
            port_range: '8080'
            direction: in
            shared: True

    app_traffic_rule:
        type: OS::Neutron::PolicyRule
        depends_on: [ app_tcp_classifier, allow_action ]
        properties:
            name: Allow_Application
            policy_classifier_id: { get_resource: app_tcp_classifier }
            policy_actions: [{ get_resource: allow_action }]
            shared: False

# Create a classifier for http traffic
    http_tcp_classifier:
        type: OS::Neutron::PolicyClassifier
        properties:
            name: HTTP_TCP_Classifier
            protocol: tcp
            port_range: '80'
            direction: in
            shared: True

# Create redirect action
    redirect_to_chain:
        type: OS::Neutron::PolicyAction
        depends_on: sc_spec
        properties:
            name: Redirect_LB_Chain_Action
            action_type: redirect
            action_value: { get_resource: sc_spec }
            shared: False

# Create http policy rule set
    http_traffic_rule:
        type: OS::Neutron::PolicyRule
        depends_on: [ http_tcp_classifier, allow_action ]
        properties:
            name: Allow_HTTP
            policy_classifier_id: { get_resource: http_tcp_classifier }
            policy_actions: [{ get_resource: allow_action }]
            shared: False

# Create http with redirect to LB policy rule set
    http_redirect_traffic_rule:
        type: OS::Neutron::PolicyRule
        depends_on: [ http_tcp_classifier, redirect_to_chain ]
        properties:
            name: Allow_TCP_with_Redirect_Rule
            policy_classifier_id: { get_resource: http_tcp_classifier }
            policy_actions: [{ get_resource: redirect_to_chain }]
            shared: False

#### Policy-Rules-Sets (Contracts) Setup ####

# Create Monitoring policy rule set
    monitoring_rule_set:
        type: OS::Neutron::PolicyRuleSet
        depends_on: monitoring_traffic_rule
        properties:
            name: Monitoring
            policy_rules: [{ get_resource: monitoring_traffic_rule }] 
            child_policy_rule_sets: []
            shared: False

# Create MySQL DB policy rule set
    mysql_rule_set:
        type: OS::Neutron::PolicyRuleSet
        depends_on: mysql_db_traffic_rule
        properties:
            name: MySQL_DB
            policy_rules: [{ get_resource: mysql_db_traffic_rule }] 
            child_policy_rule_sets: []
            shared: False

# Create App policy rule set
    app_rule_set:
        type: OS::Neutron::PolicyRuleSet
        depends_on: app_traffic_rule
        properties:
            name: App_Rule_Set
            policy_rules: [{ get_resource: app_traffic_rule }] 
            child_policy_rule_sets: []
            shared: False

# Create HTTP policy rule set
    http_rule_set:
        type: OS::Neutron::PolicyRuleSet
        depends_on: http_traffic_rule
        properties:
            name: HTTP_TCP
            policy_rules: [{ get_resource: http_traffic_rule }] 
            child_policy_rule_sets: []
            shared: False

# Create HTTP with redirect to LB policy rule set
    http_with_lb_redirect_rule_set:
        type: OS::Neutron::PolicyRuleSet
        depends_on: http_redirect_traffic_rule
        properties:
            name: HTTP_TCP_Redirect_To_LB
            policy_rules: [{ get_resource: http_redirect_traffic_rule }] 
            child_policy_rule_sets: []
            shared: False

#### Monitoring Tier ####

    monitoring_ptg:
        type: OS::Neutron::PolicyTargetGroup
        depends_on: [ monitoring_rule_set, monitoring_tier_l2_policy ]
        properties:
            name: Monitoring_PTG
            l2_policy_id: { get_resource: monitoring_tier_l2_policy }
            provided_policy_rule_sets: 
                - policy_rule_set_id: { get_resource: monitoring_rule_set }
                  policy_rule_set_scope: 
            shared: False

    monitoring_server_pt1:
        type: OS::Neutron::PolicyTarget
        depends_on: monitoring_ptg
        properties:
            name: monitoring_server_pt1
            policy_target_group_id: { get_resource: monitoring_ptg }

    monitoring_server1:
        type: OS::Nova::Server
        depends_on: monitoring_server_pt1
        properties:
            name: Monitoring_Server
            image: { get_param: monitoring_vm_image }
            flavor: m1.nano
            networks:
                - port: {get_attr: [monitoring_server_pt1, port_id]}

#### DB Tier ####

    db_ptg:
        type: OS::Neutron::PolicyTargetGroup
        depends_on: [ mysql_rule_set, app_db_tier_l2_policy ]
        properties:
            name: DB_PTG
            l2_policy_id: { get_resource: app_db_tier_l2_policy }
            provided_policy_rule_sets: 
                - policy_rule_set_id: { get_resource: mysql_rule_set }
                  policy_rule_set_scope: 
            consumed_policy_rule_sets: 
                - policy_rule_set_id: { get_resource: monitoring_rule_set }
                  policy_rule_set_scope: 
            shared: False

    db_server_pt1:
        type: OS::Neutron::PolicyTarget
        depends_on: db_ptg
        properties:
            name: db_server_pt1
            policy_target_group_id: { get_resource: db_ptg }

    db_server1:
        type: OS::Nova::Server
        depends_on: db_server_pt1
        properties:
            name: DB_Server
            image: { get_param: db_vm_image }
            flavor: m1.nano
            networks:
                - port: {get_attr: [db_server_pt1, port_id]}

#### App Tier ####

    app_ptg:
        type: OS::Neutron::PolicyTargetGroup
        depends_on: [ app_rule_set, mysql_rule_set, app_db_tier_l2_policy ]
        properties:
            name: App_PTG
            l2_policy_id: { get_resource: app_db_tier_l2_policy }
            provided_policy_rule_sets: 
                - policy_rule_set_id: { get_resource: app_rule_set }
                  policy_rule_set_scope: 
            consumed_policy_rule_sets: 
                - policy_rule_set_id: { get_resource: mysql_rule_set }
                  policy_rule_set_scope: 
                - policy_rule_set_id: { get_resource: monitoring_rule_set }
                  policy_rule_set_scope: 
            shared: False

    app_server_pt1:
        type: OS::Neutron::PolicyTarget
        depends_on: app_ptg
        properties:
            name: app_server_pt1
            policy_target_group_id: { get_resource: app_ptg }

    app_server1:
        type: OS::Nova::Server
        depends_on: app_server_pt1
        properties:
            name: App_Server
            image: { get_param: app_vm_image }
            flavor: m1.nano
            networks:
                - port: {get_attr: [app_server_pt1, port_id]}

#### Web Tier ####

    web_ptg:
        type: OS::Neutron::PolicyTargetGroup
        depends_on: [ app_rule_set, http_with_lb_redirect_rule_set, web_tier_l2_policy, http_rule_set ]
        properties:
            name: Web_PTG
            l2_policy_id: { get_resource: web_tier_l2_policy }
            provided_policy_rule_sets: 
                - policy_rule_set_id: { get_resource: http_with_lb_redirect_rule_set }
                  policy_rule_set_scope: 
            consumed_policy_rule_sets: 
                - policy_rule_set_id: { get_resource: app_rule_set }
                  policy_rule_set_scope: 
                - policy_rule_set_id: { get_resource: monitoring_rule_set }
                  policy_rule_set_scope: 
                - policy_rule_set_id: { get_resource: http_rule_set }
                  policy_rule_set_scope: 
            network_service_policy_id: { get_resource: vip_ip_policy }
            shared: False

    web_server_pt1:
        type: OS::Neutron::PolicyTarget
        depends_on: web_ptg
        properties:
            name: web_server_pt1
            description: 'Pool Member'
            policy_target_group_id: { get_resource: web_ptg }

    web_server_pt2:
        type: OS::Neutron::PolicyTarget
        depends_on: web_server_pt1
        properties:
            name: web_server_pt2
            description: 'Pool Member'
            policy_target_group_id: { get_resource: web_ptg }

    web_server1:
        type: OS::Nova::Server
        depends_on: web_server_pt1
        properties:
            name: Web_Real_Server_1
            image: {get_param: web_vm_image}
            flavor: m1.nano
            networks:
                - port: {get_attr: [web_server_pt1, port_id]}

    web_server2:
        type: OS::Nova::Server
        depends_on: web_server_pt2
        properties:
            name: Web_Real_Server_2
            image: {get_param: web_vm_image}
            flavor: m1.nano
            networks:
                - port: {get_attr: [web_server_pt2, port_id]}

#### Outside (External) Tier ####

#    outside_tier_l2_policy:
#        type: OS::Neutron::L2Policy
#        depends_on: l3_policy
#        properties:
#            name: Outside_Domain
#            l3_policy_id: { get_resource: l3_policy }
#            shared: False

#    outside_ptg:
#        type: OS::Neutron::PolicyTargetGroup
#        depends_on: [ http_with_lb_redirect_rule_set, outside_tier_l2_policy ]
#        properties:
#            name: { get_param: external_policy_name }
#            l2_policy_id: { get_resource: outside_tier_l2_policy }
#            shared: False

#### Setup Network Services' Mgmt ####

    mgmt_ptg:
        type: OS::Neutron::PolicyTargetGroup
        depends_on: [ mgmt_l2_policy ]
        properties:
            name: 'Service Management PTG'
            l2_policy_id: { get_resource: mgmt_l2_policy }
            shared: False
